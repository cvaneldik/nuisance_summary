### Starting TaskPrologue of job 411806 on tf062 at Thu 20 Jun 2024 03:25:55 PM CEST
Running on cores 62-63,126-127 with governor ondemand
No GPU known
### Finished TaskPrologue

tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
Eff_area100
amplitude
lambda_
index
loaded dataset:
/home/wecapstor1/caph/mppi045h/nuisance_summary/PKS_flare/HESS_public/dataset-simulated-2.154434690031884-hr.fits.gz
DatasetModels

Component 0: SkyModel

  Name                      : Crablog
  Datasets names            : None
  Spectral model type       : ExpCutoffPowerLawSpectralModel
  Spatial  model type       : PointSpatialModel
  Temporal model type       : 
  Parameters:
    index                         :      2.300   +/-    0.09             
    amplitude                     :   3.85e-11   +/- 2.5e-12 1 / (cm2 s TeV)
    reference             (frozen):      1.000       TeV         
    lambda_                       :      0.100   +/-    0.04 1 / TeV     
    alpha                 (frozen):      1.000                   
    lon_0                         :    329.680   +/-    0.00 deg         
    lat_0                         :    -30.222   +/-    0.00 deg         

Component 1: FoVBackgroundModel

  Name                      : dataset-bkg
  Datasets names            : ['dataset']
  Spectral model type       : PowerLawNormSpectralModel
  Parameters:
    norm                          :      1.000   +/-    0.01             
    tilt                          :      0.000   +/-    0.01             
    reference             (frozen):      1.000       TeV         


scanning amplitude
Crablog.spectral.amplitude_scan
stat_scan
fit_results
{'Crablog.spectral.amplitude_scan': [3.349899930267296e-11, 3.3962824656026255e-11, 3.443307211042399e-11, 3.4909830585934115e-11, 3.5393190233806716e-11, 3.588324245352129e-11, 3.638007991006998e-11, 3.688379655147912e-11, 3.739448762657435e-11, 3.791224970299188e-11, 3.8437180685437844e-11, 3.8969379834201824e-11, 3.9508947783925937e-11, 4.00559865626346e-11, 4.061059961102636e-11, 4.117289180203416e-11, 4.174296946065639e-11, 4.232094038406126e-11, 4.290691386197078e-11, 4.350100069732709e-11], 'stat_scan': [89289.19275300659, 89288.18788245608, 89287.30673487647, 89286.54451804669, 89285.89647432925, 89285.35790242467, 89284.92419284777, 89284.59083499885, 89284.3534339498, 89284.20772392293, 89284.1495700596, 89284.17497326763, 89284.28007167456, 89284.46114008661, 89284.71459158846, 89285.03697448225, 89285.42497064153, 89285.87539133475, 89286.38518560908, 89286.9514169135]}
scanning lambda_
Crablog.spectral.lambda__scan
stat_scan
fit_results
{'Crablog.spectral.lambda__scan': [0.02395578542894633, 0.0319604395943204, 0.03996509375969447, 0.04796974792506854, 0.05597440209044261, 0.06397905625581668, 0.07198371042119076, 0.07998836458656483, 0.08799301875193889, 0.09599767291731297, 0.10400232708268703, 0.1120069812480611, 0.12001163541343518, 0.12801628957880923, 0.13602094374418333, 0.14402559790955738, 0.15203025207493145, 0.16003490624030553, 0.1680395604056796, 0.17604421457105368], 'stat_scan': [89289.52424322489, 89288.22321074925, 89287.16624975052, 89286.31339189144, 89285.63422670292, 89285.10506810281, 89284.7070585721, 89284.42488691912, 89284.24590185391, 89284.15948967687, 89284.15662790103, 89284.22955920282, 89284.37154683129, 89284.57669248566, 89284.83979122921, 89285.15622131138, 89285.52185514629, 89285.9329880983, 89286.3862781694, 89286.87870198634]}
scanning index
Crablog.spectral.index_scan
stat_scan
fit_results
{'Crablog.spectral.index_scan': [2.1236663725172282, 2.1422278069890988, 2.1607892414609697, 2.1793506759328403, 2.197912110404711, 2.2164735448765818, 2.2350349793484523, 2.2535964138203233, 2.272157848292194, 2.2907192827640643, 2.3092807172359353, 2.327842151707806, 2.3464035861796764, 2.3649650206515473, 2.383526455123418, 2.402087889595289, 2.4206493240671594, 2.43921075853903, 2.457772193010901, 2.4763336274827714], 'stat_scan': [89287.37088868176, 89286.75820962508, 89286.20400039323, 89285.71047057596, 89285.27991447534, 89284.91470809781, 89284.61731307075, 89284.39027741562, 89284.23624304624, 89284.15794827329, 89284.15823413011, 89284.24004965839, 89284.40645829502, 89284.66064425155, 89285.00591943404, 89285.4457304034, 89285.98366515362, 89286.62345755973, 89287.36898989389, 89288.22429313905]}
DatasetModels

Component 0: SkyModel

  Name                      : Crablog
  Datasets names            : None
  Spectral model type       : ExpCutoffPowerLawSpectralModel
  Spatial  model type       : PointSpatialModel
  Temporal model type       : 
  Parameters:
    index                         :      2.300   +/-    0.09             
    amplitude                     :   3.85e-11   +/- 2.5e-12 1 / (cm2 s TeV)
    reference             (frozen):      1.000       TeV         
    lambda_                       :      0.100   +/-    0.04 1 / TeV     
    alpha                 (frozen):      1.000                   
    lon_0                         :    329.680   +/-    0.00 deg         
    lat_0                         :    -30.222   +/-    0.00 deg         

Component 1: FoVBackgroundModel

  Name                      : dataset-bkg
  Datasets names            : ['dataset']
  Spectral model type       : PowerLawNormSpectralModel
  Parameters:
    norm                          :      1.000   +/-    0.01             
    tilt                          :      0.000   +/-    0.01             
    reference             (frozen):      1.000       TeV         


scanning amplitude
Crablog.spectral.amplitude_scan
stat_scan
fit_results
{'Crablog.spectral.amplitude_scan': [2.667350838954166e-11, 2.758013022241604e-11, 2.8517567767113467e-11, 2.9486868437297414e-11, 3.0489115247800605e-11, 3.15254280246949e-11, 3.259696465649027e-11, 3.370492238786227e-11, 3.4850539157351565e-11, 3.6035094980532554e-11, 3.725991338019455e-11, 3.85263628651351e-11, 3.983585845921553e-11, 4.118986328238979e-11, 4.258989018547102e-11, 4.403750344046412e-11, 4.5534320488350466e-11, 4.708201374628065e-11, 4.868231247619206e-11, 5.033700471694108e-11], 'stat_scan': [89290.47162664741, 89289.33740007308, 89288.32035800944, 89287.41996874935, 89286.63350575928, 89285.95867559106, 89285.39432612671, 89284.9379349096, 89284.58738923637, 89284.34059461995, 89284.19545011646, 89284.14983656863, 89284.2007005941, 89284.3471238976, 89284.58518049738, 89284.91372013987, 89285.3298820879, 89285.83121816536, 89286.41520644228, 89287.07928654888]}
scanning lambda_
Crablog.spectral.lambda__scan
stat_scan
fit_results
{'Crablog.spectral.lambda__scan': [0.023815481592976098, 0.03183723420122911, 0.039858986809482126, 0.047880739417735144, 0.055902492025988154, 0.06392424463424116, 0.07194599724249418, 0.0799677498507472, 0.08798950245900021, 0.09601125506725322, 0.10403300767550623, 0.11205476028375926, 0.12007651289201227, 0.12809826550026526, 0.13612001810851831, 0.1441417707167713, 0.1521635233250243, 0.16018527593327736, 0.16820702854153036, 0.17622878114978335], 'stat_scan': [89289.4551249346, 89288.1618724025, 89287.1121102208, 89286.26628223044, 89285.59418423127, 89285.07222210296, 89284.68157118463, 89284.40692196623, 89284.23561129214, 89284.15700693533, 89284.162067791, 89284.243018412, 89284.39310580277, 89284.60641642168, 89284.8777326165, 89285.2024209786, 89285.5763434544, 89285.99578572682, 89286.45739887649, 89286.95815131685]}
scanning index
Crablog.spectral.index_scan
stat_scan
fit_results
{'Crablog.spectral.index_scan': [2.11969091122689, 2.138743472302157, 2.157796033377424, 2.176848594452691, 2.1959011555279586, 2.2149537166032256, 2.234006277678493, 2.25305883875376, 2.2721113998290274, 2.2911639609042944, 2.310216521979562, 2.329269083054829, 2.3483216441300963, 2.3673742052053632, 2.3864267662806307, 2.4054793273558976, 2.424531888431165, 2.443584449506432, 2.4626370105816995, 2.4816895716569665], 'stat_scan': [89287.46179902843, 89286.83297014864, 89286.26706750129, 89285.76107543314, 89285.3213465459, 89284.9456819331, 89284.64100002559, 89284.40608156598, 89284.24635741183, 89284.16388393464, 89284.15730846649, 89284.234926378, 89284.39782831351, 89284.64640528179, 89284.9871024219, 89285.42210708486, 89285.95435597771, 89286.58532749125, 89287.32150865601, 89288.16560728489]}
[{'Crablog.spectral.amplitude_scan': array([2.66735084e-11, 2.75801302e-11, 2.85175678e-11, 2.94868684e-11,
       3.04891152e-11, 3.15254280e-11, 3.25969647e-11, 3.37049224e-11,
       3.48505392e-11, 3.60350950e-11, 3.72599134e-11, 3.85263629e-11,
       3.98358585e-11, 4.11898633e-11, 4.25898902e-11, 4.40375034e-11,
       4.55343205e-11, 4.70820137e-11, 4.86823125e-11, 5.03370047e-11]), 'stat_scan': array([89290.47162665, 89289.33740007, 89288.32035801, 89287.41996875,
       89286.63350576, 89285.95867559, 89285.39432613, 89284.93793491,
       89284.58738924, 89284.34059462, 89284.19545012, 89284.14983657,
       89284.20070059, 89284.3471239 , 89284.5851805 , 89284.91372014,
       89285.32988209, 89285.83121817, 89286.41520644, 89287.07928655]), 'fit_results': [<gammapy.modeling.fit.OptimizeResult object at 0x7fe479623550>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480f3aac0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480f54f10>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480e7f700>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480f86dc0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480f78340>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe48100a970>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478de05e0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480f68a60>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478d8e760>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478dbf310>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478d0ac70>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478d7af70>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478d23250>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478d7acd0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478c35310>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480ee2d00>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480e04490>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480fa0d30>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe4796c6a90>]}, {'Crablog.spectral.lambda__scan': array([0.02381548, 0.03183723, 0.03985899, 0.04788074, 0.05590249,
       0.06392424, 0.071946  , 0.07996775, 0.0879895 , 0.09601126,
       0.10403301, 0.11205476, 0.12007651, 0.12809827, 0.13612002,
       0.14414177, 0.15216352, 0.16018528, 0.16820703, 0.17622878]), 'stat_scan': array([89289.45512493, 89288.1618724 , 89287.11211022, 89286.26628223,
       89285.59418423, 89285.0722221 , 89284.68157118, 89284.40692197,
       89284.23561129, 89284.15700694, 89284.16206779, 89284.24301841,
       89284.3931058 , 89284.60641642, 89284.87773262, 89285.20242098,
       89285.57634345, 89285.99578573, 89286.45739888, 89286.95815132]), 'fit_results': [<gammapy.modeling.fit.OptimizeResult object at 0x7fe479692c70>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe4796508b0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe48105cdc0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe4795e59a0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480f78ca0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478ca1d90>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe4796cf910>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478d7a1c0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe4796b5160>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478d7a9d0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478ca7400>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478ccc1c0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478c86700>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478caf070>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478b91f40>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478b87370>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478dc1670>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480e5b6d0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478a264f0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478a687c0>]}, {'Crablog.spectral.index_scan': array([2.11969091, 2.13874347, 2.15779603, 2.17684859, 2.19590116,
       2.21495372, 2.23400628, 2.25305884, 2.2721114 , 2.29116396,
       2.31021652, 2.32926908, 2.34832164, 2.36737421, 2.38642677,
       2.40547933, 2.42453189, 2.44358445, 2.46263701, 2.48168957]), 'stat_scan': array([89287.46179903, 89286.83297015, 89286.2670675 , 89285.76107543,
       89285.32134655, 89284.94568193, 89284.64100003, 89284.40608157,
       89284.24635741, 89284.16388393, 89284.15730847, 89284.23492638,
       89284.39782831, 89284.64640528, 89284.98710242, 89285.42210708,
       89285.95435598, 89286.58532749, 89287.32150866, 89288.16560728]), 'fit_results': [<gammapy.modeling.fit.OptimizeResult object at 0x7fe478c82e50>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478ba57c0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478cb9ee0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478ca19d0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478d33e50>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478cd93a0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe479659730>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe4796cf790>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe481024580>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480f3ef70>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe4796cfc40>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480e0aeb0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe480e819a0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe47c4e6640>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe479663fd0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478be2ee0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478dac370>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478afb9d0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478a716d0>, <gammapy.modeling.fit.OptimizeResult object at 0x7fe478b87910>]}]
Traceback (most recent call last):
  File "4_asimov_scan.py", line 329, in <module>
    fig.savefig(f"../{c['folder']}/plots/4_scan_{p}.pdf")
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/figure.py", line 3343, in savefig
    self.canvas.print_figure(fname, **kwargs)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/backend_bases.py", line 2366, in print_figure
    result = print_method(
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/backend_bases.py", line 2232, in <lambda>
    print_method = functools.wraps(meth)(lambda *args, **kwargs: meth(
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/backends/backend_pdf.py", line 2815, in print_pdf
    self.figure.draw(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/artist.py", line 95, in draw_wrapper
    result = draw(artist, renderer, *args, **kwargs)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/artist.py", line 72, in draw_wrapper
    return draw(artist, renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/figure.py", line 3140, in draw
    mimage._draw_list_compositing_images(
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/image.py", line 131, in _draw_list_compositing_images
    a.draw(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/artist.py", line 72, in draw_wrapper
    return draw(artist, renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/axes/_base.py", line 3064, in draw
    mimage._draw_list_compositing_images(
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/image.py", line 131, in _draw_list_compositing_images
    a.draw(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/artist.py", line 72, in draw_wrapper
    return draw(artist, renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/legend.py", line 726, in draw
    bbox = self._legend_box.get_window_extent(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 400, in get_window_extent
    bbox = self.get_bbox(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 367, in get_bbox
    bbox, offsets = self._get_bbox_and_child_offsets(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 485, in _get_bbox_and_child_offsets
    bboxes = [c.get_bbox(renderer) for c in self.get_visible_children()]
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 485, in <listcomp>
    bboxes = [c.get_bbox(renderer) for c in self.get_visible_children()]
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 367, in get_bbox
    bbox, offsets = self._get_bbox_and_child_offsets(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 512, in _get_bbox_and_child_offsets
    bboxes = [c.get_bbox(renderer) for c in self.get_visible_children()]
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 512, in <listcomp>
    bboxes = [c.get_bbox(renderer) for c in self.get_visible_children()]
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 367, in get_bbox
    bbox, offsets = self._get_bbox_and_child_offsets(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 485, in _get_bbox_and_child_offsets
    bboxes = [c.get_bbox(renderer) for c in self.get_visible_children()]
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 485, in <listcomp>
    bboxes = [c.get_bbox(renderer) for c in self.get_visible_children()]
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 367, in get_bbox
    bbox, offsets = self._get_bbox_and_child_offsets(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 512, in _get_bbox_and_child_offsets
    bboxes = [c.get_bbox(renderer) for c in self.get_visible_children()]
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 512, in <listcomp>
    bboxes = [c.get_bbox(renderer) for c in self.get_visible_children()]
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/offsetbox.py", line 801, in get_bbox
    bbox, info, yd = self._text._get_layout(renderer)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/text.py", line 386, in _get_layout
    w, h, d = _get_text_metrics_with_cache(
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/text.py", line 97, in _get_text_metrics_with_cache
    return _get_text_metrics_with_cache_impl(
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/text.py", line 105, in _get_text_metrics_with_cache_impl
    return renderer_ref().get_text_width_height_descent(text, fontprop, ismath)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/backends/_backend_pdf_ps.py", line 107, in get_text_width_height_descent
    return super().get_text_width_height_descent(s, prop, ismath)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/backend_bases.py", line 645, in get_text_width_height_descent
    return self.get_texmanager().get_text_width_height_descent(
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/texmanager.py", line 368, in get_text_width_height_descent
    dvifile = cls.make_dvi(tex, fontsize)
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/texmanager.py", line 300, in make_dvi
    cls._run_checked_subprocess(
  File "/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/matplotlib/texmanager.py", line 263, in _run_checked_subprocess
    raise RuntimeError(
RuntimeError: latex was not able to process the following string:
b'1$\\\\sigma$ error (Minos): -0.53 +0.64 '

Here is the full command invocation and its output:

latex -interaction=nonstopmode --halt-on-error --output-directory=tmpm178fl1k 8b1b56e5ff4871460b481cc75e984887.tex

This is pdfTeX, Version 3.14159265-2.6-1.40.20 (TeX Live 2019/Debian) (preloaded format=latex)
 restricted \write18 enabled.
entering extended mode
(./8b1b56e5ff4871460b481cc75e984887.tex
LaTeX2e <2020-02-02> patch level 2
L3 programming layer <2020-02-14>
(/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
Document Class: article 2019/12/20 v1.4l Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size10.clo))

! LaTeX Error: File `type1cm.sty' not found.

Type X to quit or <RETURN> to proceed,
or enter new name. (Default extension: sty)

Enter file name: 
! Emergency stop.
<read *> 
         
l.8 \usepackage
               {type1ec}^^M
No pages of output.
Transcript written on tmpm178fl1k/8b1b56e5ff4871460b481cc75e984887.log.



srun: error: tf062: task 1: Exited with exit code 1
srun: Terminating StepId=411806.0
slurmstepd-tf062: error: *** STEP 411806.0 ON tf062 CANCELLED AT 2024-06-20T20:45:49 ***
srun: error: tf062: task 0: Terminated
srun: Force Terminated StepId=411806.0
=== JOB_STATISTICS ===
=== current date     : Thu 20 Jun 2024 08:45:49 PM CEST
= Job-ID             : 411806 on tinyfat
= Job-Name           : logfiles/4
= Job-Command        : /home/wecapstor1/caph/mppi045h/nuisance_summary/Analysis/4.slurm
= Initial workdir    : /home/wecapstor1/caph/mppi045h/nuisance_summary/Analysis
= Queue/Partition    : work
= Slurm account      : caph with QOS=normal
= Requested resources:  for 1-00:00:00
= Elapsed runtime    : 05:19:57
= Total RAM usage    : 2.7 GiB of requested  GiB (%)   
= Node list          : tf062
= Subm/Elig/Start/End: 2024-06-20T15:25:51 / 2024-06-20T15:25:51 / 2024-06-20T15:25:52 / 2024-06-20T20:45:49
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc           83.7G   104.9G   209.7G        N/A     140K     500K   1,000K        N/A    
    /home/vault        515.7G  1048.6G  2097.2G        N/A  13,976      200K     400K        N/A    
======================

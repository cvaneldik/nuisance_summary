tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
tput: No value for $TERM and no -T specified
2.154434690031884
loaded dataset:
/home/wecapstor1/caph/mppi045h/nuisance_summary/PKS_flare/HESS_public/dataset-simulated-2.154434690031884-hr.fits.gz
SkyModel

  Name                      : Crablog
  Datasets names            : None
  Spectral model type       : ExpCutoffPowerLawSpectralModel
  Spatial  model type       : PointSpatialModel
  Temporal model type       : 
  Parameters:
    index                         :      2.300   +/-    0.09             
    amplitude                     :   3.85e-11   +/- 2.5e-12 1 / (cm2 s TeV)
    reference             (frozen):      1.000       TeV         
    lambda_                       :      0.100   +/-    0.04 1 / TeV     
    alpha                 (frozen):      1.000                   
    lon_0                         :    329.680   +/-    0.00 deg         
    lat_0                         :    -30.222   +/-    0.00 deg         


amplitude index
{'Crablog.spectral.amplitude_scan': array([3.34989993e-11, 3.43857558e-11, 3.52959858e-11, 3.62303107e-11,
       3.71893681e-11, 3.81738129e-11, 3.91843171e-11, 4.02215704e-11,
       4.12862811e-11, 4.23791758e-11, 4.35010007e-11]), 'Crablog.spectral.index_scan': array([2.12366637, 2.1589331 , 2.19419982, 2.22946655, 2.26473327,
       2.3       , 2.33526673, 2.37053345, 2.40580018, 2.4410669 ,
       2.47633363]), 'stat_scan': array([[89307.60317175, 89303.70559162, 89300.22692903, 89297.18592453,
        89294.60209656, 89292.49567146, 89290.88765159, 89289.79982802,
        89289.2547934 , 89289.27595384, 89289.88752831],
       [89303.34069207, 89299.71191367, 89296.51078407, 89293.75623176,
        89291.46785186, 89289.66597283, 89288.37164647, 89287.6067084 ,
        89287.3937827 , 89287.75631659, 89288.71856715],
       [89299.58327891, 89296.23805024, 89293.32983995, 89290.87773461,
        89288.90148961, 89287.42154992, 89286.45908922, 89286.03603122,
        89286.17508905, 89286.89976987, 89288.23440424],
       [89296.33095005, 89293.28386469, 89290.68374696, 89288.54987964,
        89286.90219143, 89285.76131659, 89285.14858641, 89285.08608263,
        89285.59664805, 89286.70391497, 89288.43232557],
       [89293.58342778, 89290.8487382 , 89288.57165362, 89286.77153452,
        89285.46854333, 89284.68352966, 89284.43804692, 89284.7543738 ,
        89285.65554771, 89287.16538142, 89289.30848875],
       [89291.33955235, 89288.93157373, 89286.99218713, 89285.54103576,
        89284.59854266, 89284.18582161, 89284.32468168, 89285.03765965,
        89286.34803528, 89288.27986365, 89290.85799137],
       [89289.59817719, 89287.53077733, 89285.94345099, 89284.85614527,
        89284.28958119, 89284.26516651, 89284.80500852, 89285.93194163,
        89287.66954627, 89290.04216331, 89293.0749317 ],
       [89288.35752221, 89286.6442653 , 89285.42302234, 89284.71406843,
        89284.53844952, 89284.91789638, 89285.87484952, 89287.43247763,
        89289.6146979 , 89292.44620311, 89295.95245069],
       [89287.61534148, 89286.26945361, 89285.42794474, 89285.11143977,
        89285.34178999, 89286.14153206, 89287.52933469, 89289.53378175,
        89292.17732829, 89295.48502743, 89299.48275798],
       [89287.36892851, 89286.40326479, 89285.95473393, 89286.04432603,
        89286.69378945, 89287.92558661, 89289.76288488, 89292.22961146,
        89295.35044622, 89299.15085698, 89303.65712783],
       [89287.61511346, 89287.04212208, 89286.99937133, 89287.50822231,
        89288.59080067, 89290.26995115, 89292.56923467, 89295.51298541,
        89299.12629406, 89303.43504721, 89308.46593646]]), 'fit_results': array([[<gammapy.modeling.fit.OptimizeResult object at 0x7fae8080d490>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fba97f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd6aa90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8195ec70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd44730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd28ca0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd4f760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd44880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd4c250>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd62f10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd5b820>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd63970>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd5b970>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccf8400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd5b130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd63250>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd54dc0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd0a9d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd62ac0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cced8b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd16e50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd053a0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccf8c10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cceebb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd1faf0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd1deb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd1f970>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd007c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd00460>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd1d8e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd167c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccc17c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccc1460>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd1e0a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd112b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccc7e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd1e1c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccd7be0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cccf070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccd79a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd16280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccbb550>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cccf6a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccbb730>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc67400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc67880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd1e370>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd1e220>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccd7eb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccbb250>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc81850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc6e730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccd77c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccbbee0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc6bd00>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc6e9a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc79820>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cca0670>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc9d550>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cca06d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc93040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846f2a30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84703250>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc968e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84703fd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84710340>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae84714760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8471eeb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae847034c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae847031c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846fe130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8470b5b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84714520>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8470bf10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8472d790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae847140a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8472d2b0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae8471e430>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84714460>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846b56a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d16d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8472ddf0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d15b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d4fa0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846bc160>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84714070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d4670>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d6c70>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae84671ca0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846c52b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846ba520>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846df760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846dfa60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84671970>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84674850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84671e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8467b640>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846baf40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84674490>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae84691700>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84697760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84684730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846a2df0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846838b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84684d00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846a70d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8463b5e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846a7ca0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846446a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84648280>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae846a2fa0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84638700>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846918e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8464fbe0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84648460>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8464fd60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84653ac0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846627f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8466a580>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846a0850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846919a0>]],
2.154434690031884
loaded dataset:
/home/wecapstor1/caph/mppi045h/nuisance_summary/PKS_flare/HESS_public/dataset-simulated-2.154434690031884-hr.fits.gz
SkyModel

  Name                      : Crablog
  Datasets names            : None
  Spectral model type       : ExpCutoffPowerLawSpectralModel
  Spatial  model type       : PointSpatialModel
  Temporal model type       : 
  Parameters:
    index                         :      2.300   +/-    0.09             
    amplitude                     :   3.85e-11   +/- 2.5e-12 1 / (cm2 s TeV)
    reference             (frozen):      1.000       TeV         
    lambda_                       :      0.100   +/-    0.04 1 / TeV     
    alpha                 (frozen):      1.000                   
    lon_0                         :    329.680   +/-    0.00 deg         
    lat_0                         :    -30.222   +/-    0.00 deg         


amplitude index
{'Crablog.spectral.amplitude_scan': array([3.34989993e-11, 3.43857558e-11, 3.52959858e-11, 3.62303107e-11,
       3.71893681e-11, 3.81738129e-11, 3.91843171e-11, 4.02215704e-11,
       4.12862811e-11, 4.23791758e-11, 4.35010007e-11]), 'Crablog.spectral.index_scan': array([2.12366637, 2.1589331 , 2.19419982, 2.22946655, 2.26473327,
       2.3       , 2.33526673, 2.37053345, 2.40580018, 2.4410669 ,
       2.47633363]), 'stat_scan': array([[89307.60317175, 89303.70559162, 89300.22692903, 89297.18592453,
        89294.60209656, 89292.49567146, 89290.88765159, 89289.79982802,
        89289.2547934 , 89289.27595384, 89289.88752831],
       [89303.34069207, 89299.71191367, 89296.51078407, 89293.75623176,
        89291.46785186, 89289.66597283, 89288.37164647, 89287.6067084 ,
        89287.3937827 , 89287.75631659, 89288.71856715],
       [89299.58327891, 89296.23805024, 89293.32983995, 89290.87773461,
        89288.90148961, 89287.42154992, 89286.45908922, 89286.03603122,
        89286.17508905, 89286.89976987, 89288.23440424],
       [89296.33095005, 89293.28386469, 89290.68374696, 89288.54987964,
        89286.90219143, 89285.76131659, 89285.14858641, 89285.08608263,
        89285.59664805, 89286.70391497, 89288.43232557],
       [89293.58342778, 89290.8487382 , 89288.57165362, 89286.77153452,
        89285.46854333, 89284.68352966, 89284.43804692, 89284.7543738 ,
        89285.65554771, 89287.16538142, 89289.30848875],
       [89291.33955235, 89288.93157373, 89286.99218713, 89285.54103576,
        89284.59854266, 89284.18582161, 89284.32468168, 89285.03765965,
        89286.34803528, 89288.27986365, 89290.85799137],
       [89289.59817719, 89287.53077733, 89285.94345099, 89284.85614527,
        89284.28958119, 89284.26516651, 89284.80500852, 89285.93194163,
        89287.66954627, 89290.04216331, 89293.0749317 ],
       [89288.35752221, 89286.6442653 , 89285.42302234, 89284.71406843,
        89284.53844952, 89284.91789638, 89285.87484952, 89287.43247763,
        89289.6146979 , 89292.44620311, 89295.95245069],
       [89287.61534148, 89286.26945361, 89285.42794474, 89285.11143977,
        89285.34178999, 89286.14153206, 89287.52933469, 89289.53378175,
        89292.17732829, 89295.48502743, 89299.48275798],
       [89287.36892851, 89286.40326479, 89285.95473393, 89286.04432603,
        89286.69378945, 89287.92558661, 89289.76288488, 89292.22961146,
        89295.35044622, 89299.15085698, 89303.65712783],
       [89287.61511346, 89287.04212208, 89286.99937133, 89287.50822231,
        89288.59080067, 89290.26995115, 89292.56923467, 89295.51298541,
        89299.12629406, 89303.43504721, 89308.46593646]]), 'fit_results': array([[<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95fafd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6761730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6740fa0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95f14c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c674a880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6744b80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6727df0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6776160>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c67381c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6758550>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e2220>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c67502b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6756e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e8e50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e33d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6758340>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6749700>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6750160>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e2400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6744e80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c67078b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66dd580>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66f21f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66dd1f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6707b50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66a2c40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6713400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66f7ca0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66f7880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66a2250>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66f7b20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66ba190>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6714e20>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66f7a90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66f7250>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66a2cd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66b33d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66ca8b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66baa30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66c8a00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66ff0a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66c5a90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6713340>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66c8070>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66c5070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6662730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6678640>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66c5be0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6669670>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6670760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66624c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c666beb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6678280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c668bfd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66621f0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66caa90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6696b50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6670a30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c668bc10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6696af0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c669c7c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0f47f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c667c2b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c667c040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0e62b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c669c970>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0f0550>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0ffc70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c669cbe0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6696790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0ff190>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce118e80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0e67c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce121730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce1210d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0ffc10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0b67c0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce118fa0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce118940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0c38b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce118760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0b0dc0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0c3a90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0a8e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0d6070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0b8fa0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce119c40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0de9a0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0ff5e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0cf9d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0c7a30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0c7e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0b01c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0b0940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0783d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0b06a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce071670>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce087e80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce07e670>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce08c2e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09cdf0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce078eb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0876a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09cac0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0294f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0787c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09c310>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09f760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce07e0d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce031220>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce029c70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce03da00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0929d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0437c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09c5b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce054c70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce054370>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce054790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce081e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce042730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce05d5b0>]],
      dtype=object)}
Crablog.spectral.amplitude_scan
Crablog.spectral.index_scan
stat_scan
fit_results
SkyModel

  Name                      : Crablog
  Datasets names            : None
  Spectral model type       : ExpCutoffPowerLawSpectralModel
  Spatial  model type       : PointSpatialModel
  Temporal model type       : 
  Parameters:
    index                         :      2.300   +/-    0.09             
    amplitude                     :   3.85e-11   +/- 2.5e-12 1 / (cm2 s TeV)
    reference             (frozen):      1.000       TeV         
    lambda_                       :      0.100   +/-    0.04 1 / TeV     
    alpha                 (frozen):      1.000                   
    lon_0                         :    329.680   +/-    0.00 deg         
    lat_0                         :    -30.222   +/-    0.00 deg         


amplitude lambda_
{'Crablog.spectral.amplitude_scan': array([3.35149464e-11, 3.44028245e-11, 3.53142243e-11, 3.62497689e-11,
       3.72100980e-11, 3.81958681e-11, 3.92077532e-11, 4.02464452e-11,
       4.13126543e-11, 4.24071093e-11, 4.35305587e-11]), 'Crablog.spectral.lambda__scan': array([0.02389109, 0.03910771, 0.05432433, 0.06954095, 0.08475757,
       0.09997419, 0.11519081, 0.13040743, 0.14562405, 0.16084067,
       0.17605728]), 'stat_scan': array([[89290.09821294, 89289.16383715, 89289.692832  , 89291.43324658,
        89294.21548476, 89297.91665218, 89302.44221349, 89307.71673477,
        89313.67788611, 89320.27293731, 89327.45642893],
       [89289.53726948, 89287.71831963, 89287.40757949, 89288.34667797,
        89290.36167452, 89293.32648005, 89297.14411376, 89301.73718166,
        89307.04169128, 89313.00349693, 89319.57598198],
       [89290.00324837, 89287.27099277, 89286.09298433, 89286.20424652,
        89287.42638193, 89289.63001352, 89292.71565542, 89296.60385266,
        89301.22892388, 89306.53532602, 89312.47517884],
       [89291.52900609, 89287.85399347, 89285.78049649, 89285.03675685,
        89285.43977111, 89286.85681172, 89289.18578804, 89292.34516146,
        89296.2675144 , 89300.8957972 , 89306.1808627 ],
       [89294.14824014, 89289.50028763, 89286.50238191, 89284.87579288,
        89284.43279208, 89285.03720465, 89286.58424711, 89288.99025481,
        89292.18599684, 89296.11293582, 89300.72056147],
       [89297.89553083, 89292.24368336, 89288.29172871, 89285.75375009,
        89284.43716815, 89284.20225494, 89284.94148843, 89286.56898066,
        89289.01367689, 89292.21545396, 89296.12246749],
       [89302.80633466, 89296.1188755 , 89291.18247188, 89287.70384697,
        89285.48542949, 89284.38384002, 89284.28873435, 89285.11195298,
        89286.78055137, 89289.23279227, 89292.41543334],
       [89308.91703881, 89301.16143418, 89295.20942468, 89290.76015249,
        89287.61094379, 89285.61464317, 89284.65801396, 89284.65055481,
        89285.51738727, 89287.19511296, 89289.62906512],
       [89316.26497516, 89307.40786223, 89300.40828842, 89294.95763853,
        89290.84792764, 89287.92816843, 89286.08215242, 89285.21696238,
        89285.2557222 , 89286.13334424, 89287.79367558],
       [89324.88841606, 89314.89560072, 89306.81569846, 89300.33213565,
        89295.23147589, 89291.35880234, 89288.5948218 , 89286.84416972,
        89286.02790132, 89286.07918713, 89286.94035758],
       [89334.82667719, 89323.66306479, 89314.46924651, 89306.92040992,
        89300.79759472, 89295.94178749, 89292.23056843, 89289.56601218,
        89287.8670818 , 89287.06514136, 89287.10097986]]), 'fit_results': array([[<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd6fbb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd6f400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8464fb50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84662d30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846102e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845f1190>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8466d9a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8461cdc0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8465e100>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84619b80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84610490>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae84627580>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8460fb80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84610040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845ba130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8461cc10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845b73a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845ba040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845b7040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845b7940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845d0820>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845d7520>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae84619c10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845b4520>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846085b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845d0310>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845c79a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845b4400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845d7280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845e9100>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845e9b20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84572790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8457edc0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae845d0fa0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845b7eb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845b4340>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8458ff70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8458fc10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8458b3a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845d09a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8458fd00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84571c70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8458f370>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8457e5e0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae845ad160>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845b7f10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845721f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8458b370>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8453e880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84572490>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8454ab80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845ad0a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8459b1c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8459baf0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8455b640>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae8455bbb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84543d60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8455fc70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84543f10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8455b280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8456a4f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8455bf70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8454e6a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844fe100>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844fe700>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8453c370>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae8456ab80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84507a00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8453c460>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8454ef40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8455f730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845195b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84503940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8456eee0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8456e8e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844fe3d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845191f0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae84528730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84524b50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84507400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844bbac0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844b1ee0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845212e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844bda30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84521af0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84524a90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844c8af0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844dbcd0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae844cb100>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844d68b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844e5d30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844d6760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844e45b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844d6040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844cb160>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844efb20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844bbd60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844c80a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc37d60>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae844e1880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844db340>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc33730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844efeb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844db4c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc2a160>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc4b0d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc33220>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc4bca0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc37880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae844e5be0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc64280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc5eac0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc37760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cbf0130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc335e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc544f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cbf2760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cbf76d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc5e400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cbf0880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc4e1f0>]],
      dtype=object)}
Crablog.spectral.amplitude_scan
Crablog.spectral.index_scan
stat_scan
fit_results
SkyModel

  Name                      : Crablog
  Datasets names            : None
  Spectral model type       : ExpCutoffPowerLawSpectralModel
  Spatial  model type       : PointSpatialModel
  Temporal model type       : 
  Parameters:
    index                         :      2.300   +/-    0.09             
    amplitude                     :   3.85e-11   +/- 2.5e-12 1 / (cm2 s TeV)
    reference             (frozen):      1.000       TeV         
    lambda_                       :      0.100   +/-    0.04 1 / TeV     
    alpha                 (frozen):      1.000                   
    lon_0                         :    329.680   +/-    0.00 deg         
    lat_0                         :    -30.222   +/-    0.00 deg         


amplitude lambda_
{'Crablog.spectral.amplitude_scan': array([3.35149464e-11, 3.44028245e-11, 3.53142243e-11, 3.62497689e-11,
       3.72100980e-11, 3.81958681e-11, 3.92077532e-11, 4.02464452e-11,
       4.13126543e-11, 4.24071093e-11, 4.35305587e-11]), 'Crablog.spectral.lambda__scan': array([0.02389109, 0.03910771, 0.05432433, 0.06954095, 0.08475757,
       0.09997419, 0.11519081, 0.13040743, 0.14562405, 0.16084067,
       0.17605728]), 'stat_scan': array([[89290.09821294, 89289.16383715, 89289.692832  , 89291.43324658,
        89294.21548476, 89297.91665218, 89302.44221349, 89307.71673477,
        89313.67788611, 89320.27293731, 89327.45642893],
       [89289.53726948, 89287.71831963, 89287.40757949, 89288.34667797,
        89290.36167452, 89293.32648005, 89297.14411376, 89301.73718166,
        89307.04169128, 89313.00349693, 89319.57598198],
       [89290.00324837, 89287.27099277, 89286.09298433, 89286.20424652,
        89287.42638193, 89289.63001352, 89292.71565542, 89296.60385266,
        89301.22892388, 89306.53532602, 89312.47517884],
       [89291.52900609, 89287.85399347, 89285.78049649, 89285.03675685,
        89285.43977111, 89286.85681172, 89289.18578804, 89292.34516146,
        89296.2675144 , 89300.8957972 , 89306.1808627 ],
       [89294.14824014, 89289.50028763, 89286.50238191, 89284.87579288,
        89284.43279208, 89285.03720465, 89286.58424711, 89288.99025481,
        89292.18599684, 89296.11293582, 89300.72056147],
       [89297.89553083, 89292.24368336, 89288.29172871, 89285.75375009,
        89284.43716815, 89284.20225494, 89284.94148843, 89286.56898066,
        89289.01367689, 89292.21545396, 89296.12246749],
       [89302.80633466, 89296.1188755 , 89291.18247188, 89287.70384697,
        89285.48542949, 89284.38384002, 89284.28873435, 89285.11195298,
        89286.78055137, 89289.23279227, 89292.41543334],
       [89308.91703881, 89301.16143418, 89295.20942468, 89290.76015249,
        89287.61094379, 89285.61464317, 89284.65801396, 89284.65055481,
        89285.51738727, 89287.19511296, 89289.62906512],
       [89316.26497516, 89307.40786223, 89300.40828842, 89294.95763853,
        89290.84792764, 89287.92816843, 89286.08215242, 89285.21696238,
        89285.2557222 , 89286.13334424, 89287.79367558],
       [89324.88841606, 89314.89560072, 89306.81569846, 89300.33213565,
        89295.23147589, 89291.35880234, 89288.5948218 , 89286.84416972,
        89286.02790132, 89286.07918713, 89286.94035758],
       [89334.82667719, 89323.66306479, 89314.46924651, 89306.92040992,
        89300.79759472, 89295.94178749, 89292.23056843, 89289.56601218,
        89287.8670818 , 89287.06514136, 89287.10097986]]), 'fit_results': array([[<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c980eee0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce043d90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0374f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdffebb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce04d9a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c67278e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce05c1f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce008940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdff8d90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0034c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce01d910>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfa8d90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfa8ac0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0038e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce05c8e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfb0430>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfa83a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfabe20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce063880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce01d970>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfc5d30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0058b0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfcceb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfb09d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfc54c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfd2fd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfc5910>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce013f40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfab850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfb43a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfd1550>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce013160>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf70940>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfd2b80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfe3a60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf7fb20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf87df0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf7f040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfe3a30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfe4340>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf70220>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf96940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf95310>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfc5ee0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfa3070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf87af0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf6bd60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf87730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf36df0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf903a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf7fe20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf954c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf95760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf96f10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf9a280>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfa3f70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfa3850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf9a940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf50820>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf39a60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf60e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf57eb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf607f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf50220>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeed610>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdef33d0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf62790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf017f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdee9100>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdef38b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdef3130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf06550>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf108b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf3e4c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf27490>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf27730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf14b80>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeab880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf01df0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf25f10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf140a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeb0820>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeab850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf1d4f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeb8c40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf1de80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeb8e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeb8b50>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeb8040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf14700>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdecc310>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cded5e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdee3ac0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf1d430>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdecfd90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeccf70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeb85b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeb8a00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6627d00>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c662dc70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c663e490>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeb8070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdec61f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6641a30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c661f9a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c663f940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66271c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c665b7c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c663f970>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c662db80>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c664b370>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6638220>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c665b130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c664b910>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c65ee310>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c664b6d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c65f7e50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c664b9a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6650880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c65f6880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c65f7310>]],
      dtype=object)}
Crablog.spectral.amplitude_scan
Crablog.spectral.lambda__scan
stat_scan
fit_results
SkyModel

  Name                      : Crablog
  Datasets names            : None
  Spectral model type       : ExpCutoffPowerLawSpectralModel
  Spatial  model type       : PointSpatialModel
  Temporal model type       : 
  Parameters:
    index                         :      2.300   +/-    0.09             
    amplitude                     :   3.85e-11   +/- 2.5e-12 1 / (cm2 s TeV)
    reference             (frozen):      1.000       TeV         
    lambda_                       :      0.100   +/-    0.04 1 / TeV     
    alpha                 (frozen):      1.000                   
    lon_0                         :    329.680   +/-    0.00 deg         
    lat_0                         :    -30.222   +/-    0.00 deg         


lambda_ index
{'Crablog.spectral.lambda__scan': array([0.02390387, 0.03912716, 0.05435045, 0.06957374, 0.08479703,
       0.10002031, 0.1152436 , 0.13046689, 0.14569018, 0.16091347,
       0.17613676]), 'Crablog.spectral.index_scan': array([2.12410232, 2.15937711, 2.19465191, 2.22992671, 2.26520151,
       2.3004763 , 2.3357511 , 2.3710259 , 2.4063007 , 2.4415755 ,
       2.47685029]), 'stat_scan': array([[89350.08813944, 89337.73187998, 89326.88305616, 89317.5019544 ,
        89309.54869031, 89302.98335664, 89297.76614184, 89293.85743507,
        89291.21799144, 89289.80867323, 89289.59107504],
       [89332.8241311 , 89322.55769064, 89313.67359665, 89306.13819463,
        89299.91753122, 89294.97745867, 89291.28373845, 89288.80220994,
        89287.49853889, 89287.3388339 , 89288.28930346],
       [89319.93790399, 89311.37723793, 89304.10391591, 89298.0883426 ,
        89293.30054817, 89289.71029029, 89287.28721509, 89286.00060951,
        89285.82001436, 89286.71488747, 89288.65477931],
       [89310.15510426, 89303.042229  , 89297.1403681 , 89292.42282837,
        89288.86252273, 89286.43212212, 89285.10380271, 89284.84986856,
        89285.64240696, 89287.45346488, 89290.25509916],
       [89302.7153656 , 89296.86337309, 89292.15864466, 89288.57668366,
        89286.09259176, 89284.68118758, 89284.31684402, 89284.97394348,
        89286.62664205, 89289.24900748, 89292.81506565],
       [89297.12272353, 89292.38865045, 89288.74711499, 89286.17535124,
        89284.65024804, 89284.14815766, 89284.64683608, 89286.11788828,
        89288.54154178, 89291.89200755, 89296.14492064],
       [89293.03113432, 89289.30123529, 89286.61593643, 89284.95393748,
        89284.29333198, 89284.6121083 , 89285.88787935, 89288.09802693,
        89291.21974934, 89295.23010156, 89300.10603847],
       [89290.18669672, 89287.36777753, 89285.55088445, 89284.71566379,
        89284.84162042, 89285.90782707, 89287.89307513, 89290.77591539,
        89294.5347043 , 89299.14764221, 89304.5928143 ],
       [89288.39589963, 89286.40994476, 89285.38745845, 89285.3093284 ,
        89286.15595415, 89287.90741264, 89290.54349497, 89294.04375261,
        89298.38753436, 89303.55402622, 89309.52228893],
       [89287.50687749, 89286.28719225, 89285.99608541, 89286.61526452,
        89288.12598435, 89290.50918414, 89293.74552157, 89297.81541316,
        89302.69907485, 89308.37654831, 89314.827743  ],
       [89287.39766163, 89286.88662237, 89287.27217616, 89288.53674324,
        89290.66232404, 89293.63060999, 89297.42301812, 89302.02072495,
        89307.40470379, 89313.55575842, 89320.45454295]]), 'fit_results': array([[<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cbfb610>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cbf7d00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84644790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84637400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84638d90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846a7490>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846a75e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84697250>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846915b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8463b820>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8464f2e0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae846a7e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8467bfd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8467b370>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8468cb20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8463b580>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84648820>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846ebee0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846dbfd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846839a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846eb760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84674dc0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae84648a00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84648580>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846831c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846833d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846cc9a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846db8b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846ba850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84674c70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846b54c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846bc670>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d1bb0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae846c58e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc4b430>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8450e880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbad0a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae845a1100>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84519df0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d47c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fc4cb20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d6790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d4df0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846bc7f0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae84710b50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd0a130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd7c850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccedf70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846d1370>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbaa5e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd5b100>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8195ec70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbaaa90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccf57c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd610a0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd33730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbaacd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd875e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd7f1c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd7f460>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbf7c40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd5bd30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd3cbe0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbaab50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd7f940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd7f2e0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd5ed00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd7a4f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd33070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd4cc10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae807f6970>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd7a700>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd6df10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fba94f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbc3160>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fc6e190>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd7afd0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd6a430>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fc0a430>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbba490>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fc21850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd9ed30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbc3460>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fc0af10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cda46a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fbc3eb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd7a790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd6acd0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae8465e880>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cbf0af0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7fc21e50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc06c10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd6ad00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd5fee0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc0e790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc11520>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae807dffd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd6a1f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd62a00>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc1f4c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd9a9d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc20970>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc1fdc0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84687a60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc18070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8468ebb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd620a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae8468e040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc20fd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd53790>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fae84708220>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84726040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd629d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc22e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc254c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846f3c10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae84726940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae846f9910>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cc25910>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7cd23280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fae7ccef100>]],
      dtype=object)}
Crablog.spectral.amplitude_scan
Crablog.spectral.lambda__scan
stat_scan
fit_results
SkyModel

  Name                      : Crablog
  Datasets names            : None
  Spectral model type       : ExpCutoffPowerLawSpectralModel
  Spatial  model type       : PointSpatialModel
  Temporal model type       : 
  Parameters:
    index                         :      2.300   +/-    0.09             
    amplitude                     :   3.85e-11   +/- 2.5e-12 1 / (cm2 s TeV)
    reference             (frozen):      1.000       TeV         
    lambda_                       :      0.100   +/-    0.04 1 / TeV     
    alpha                 (frozen):      1.000                   
    lon_0                         :    329.680   +/-    0.00 deg         
    lat_0                         :    -30.222   +/-    0.00 deg         


lambda_ index
{'Crablog.spectral.lambda__scan': array([0.02390387, 0.03912716, 0.05435045, 0.06957374, 0.08479703,
       0.10002031, 0.1152436 , 0.13046689, 0.14569018, 0.16091347,
       0.17613676]), 'Crablog.spectral.index_scan': array([2.12410232, 2.15937711, 2.19465191, 2.22992671, 2.26520151,
       2.3004763 , 2.3357511 , 2.3710259 , 2.4063007 , 2.4415755 ,
       2.47685029]), 'stat_scan': array([[89350.08813944, 89337.73187998, 89326.88305616, 89317.5019544 ,
        89309.54869031, 89302.98335664, 89297.76614184, 89293.85743507,
        89291.21799144, 89289.80867323, 89289.59107504],
       [89332.8241311 , 89322.55769064, 89313.67359665, 89306.13819463,
        89299.91753122, 89294.97745867, 89291.28373845, 89288.80220994,
        89287.49853889, 89287.3388339 , 89288.28930346],
       [89319.93790399, 89311.37723793, 89304.10391591, 89298.0883426 ,
        89293.30054817, 89289.71029029, 89287.28721509, 89286.00060951,
        89285.82001436, 89286.71488747, 89288.65477931],
       [89310.15510426, 89303.042229  , 89297.1403681 , 89292.42282837,
        89288.86252273, 89286.43212212, 89285.10380271, 89284.84986856,
        89285.64240696, 89287.45346488, 89290.25509916],
       [89302.7153656 , 89296.86337309, 89292.15864466, 89288.57668366,
        89286.09259176, 89284.68118758, 89284.31684402, 89284.97394348,
        89286.62664205, 89289.24900748, 89292.81506565],
       [89297.12272353, 89292.38865045, 89288.74711499, 89286.17535124,
        89284.65024804, 89284.14815766, 89284.64683608, 89286.11788828,
        89288.54154178, 89291.89200755, 89296.14492064],
       [89293.03113432, 89289.30123529, 89286.61593643, 89284.95393748,
        89284.29333198, 89284.6121083 , 89285.88787935, 89288.09802693,
        89291.21974934, 89295.23010156, 89300.10603847],
       [89290.18669672, 89287.36777753, 89285.55088445, 89284.71566379,
        89284.84162042, 89285.90782707, 89287.89307513, 89290.77591539,
        89294.5347043 , 89299.14764221, 89304.5928143 ],
       [89288.39589963, 89286.40994476, 89285.38745845, 89285.3093284 ,
        89286.15595415, 89287.90741264, 89290.54349497, 89294.04375261,
        89298.38753436, 89303.55402622, 89309.52228893],
       [89287.50687749, 89286.28719225, 89285.99608541, 89286.61526452,
        89288.12598435, 89290.50918414, 89293.74552157, 89297.81541316,
        89302.69907485, 89308.37654831, 89314.827743  ],
       [89287.39766163, 89286.88662237, 89287.27217616, 89288.53674324,
        89290.66232404, 89293.63060999, 89297.42301812, 89302.02072495,
        89307.40470379, 89313.55575842, 89320.45454295]]), 'fit_results': array([[<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce042100>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c664b760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce042730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce029760>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6648520>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce092d60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce092280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce092dc0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce031460>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce042eb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c65f7700>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce08cbb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce042280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce029190>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce02d370>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce071b50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09f5b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0875e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce087490>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0921f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0d6280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09faf0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce071bb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0c7070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0d4550>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09fcd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0b8fd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09fc10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0b0970>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0b86d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0a8e50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce112fd0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0c7fa0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce1181f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c663e2e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdef3a00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0172b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdeaba30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdecc130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce09f280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdf01640>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce087d30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdfd2f40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce121250>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce08cc10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e8580>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e84c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce087e80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0a8340>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0cdff8b20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e89d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6778400>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce108130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95c7430>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66ddf70>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6770ee0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e8250>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6706f40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6749430>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6750940>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e8700>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66dd730>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c9661490>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6761850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c67388e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6751d00>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6752580>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95faf70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6741070>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6734130>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6785850>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95a5670>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95d2280>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95faf10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6727460>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6798f10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6793d90>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c959d7c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c675f040>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ca1ec520>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c671d5e0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c678fbb0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c665b790>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6769430>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95a5e20>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c65e6d90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c65ec580>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0430d0>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6605f40>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95af9d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c671d3d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c95af3a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c65e69a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c674a6d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce06aa60>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6798b50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce06a3d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce063670>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6756880>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0c67560a0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c674c6d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6616820>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6756d30>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6618460>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66164c0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6756820>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66165b0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66189d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce06ad00>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6617970>],
       [<gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0fdc10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6617a90>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c67361f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0fd3d0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce101f70>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0fac10>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0fdac0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6616b50>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0ce0fd1f0>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c6736e80>,
        <gammapy.modeling.fit.OptimizeResult object at 0x7fe0c66e1c10>]],
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: overflow encountered in power
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
/home/wecapstor1/caph/mppi045h/anaconda3/envs/gammapy-dev/lib/python3.8/site-packages/astropy/units/quantity.py:673: RuntimeWarning: invalid value encountered in true_divide
  result = super().__array_ufunc__(function, method, *arrays, **kwargs)
srun: Job step aborted: Waiting up to 32 seconds for job step to finish.
slurmstepd-tf067: error: *** JOB 392342 ON tf067 CANCELLED AT 2024-03-27T12:25:30 DUE TO TIME LIMIT ***
slurmstepd-tf067: error: *** STEP 392342.0 ON tf067 CANCELLED AT 2024-03-27T12:25:30 DUE TO TIME LIMIT ***
=== JOB_STATISTICS ===
=== current date     : Wed 27 Mar 2024 12:25:33 PM CET
= Job-ID             : 392342 on tinyfat
= Job-Name           : logfiles/5<
= Job-Command        : /home/wecapstor1/caph/mppi045h/nuisance_summary/Analysis/5.slurm
= Initial workdir    : /home/wecapstor1/caph/mppi045h/nuisance_summary/Analysis
= Queue/Partition    : work
= Slurm account      : caph with QOS=normal
= Requested resources:  for 1-00:00:00
= Elapsed runtime    : 1-00:00:08
= Total RAM usage    : 3.7 GiB of requested  GiB (%)   
= Node list          : tf067
= Subm/Elig/Start/End: 2024-03-26T12:25:21 / 2024-03-26T12:25:21 / 2024-03-26T12:25:22 / 2024-03-27T12:25:30
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc           83.3G   104.9G   209.7G        N/A     120K     500K   1,000K        N/A    
    /home/vault         75.6G  1048.6G  2097.2G        N/A     135      200K     400K        N/A    
======================
